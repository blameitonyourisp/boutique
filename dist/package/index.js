class e{constructor(e){this.evs={},this.state=e}createRedaction(e){const{state:t,tracer:s}=this.proxy;return r=>this.redact(s,e(t,r))}createListener(e){const{state:t,tracer:s}=this.proxy;return e(t),{func:s=>e(t,s)(),deps:s.map((e=>e.key))}}addListener(e){e.deps.forEach((t=>{this.evs[t]=[...this.evs[t]||[],e]}))}removeListener(e){e.deps.forEach((t=>{this.evs[t]=this.evs[t].filter((t=>t!==e))}))}redact(e,t,s=[]){e.forEach((e=>{if(e.value){let t=this.state;e.key.split(".").slice(1).reduce(((r,c,n,a)=>(n!==a.length-1?t=t[c]||{}:t[c]=e.value,r=`${r}.${c}`,s.push(...this.evs[r]||[]),r)),"")}})),[...new Set(s)].forEach((e=>e.func(t)))}handler(e,t=""){return{get:(s,r)=>{const c=`${t}.${r}`;t&&c.includes(e[0].key)?e.splice(0,1,{key:c}):e.unshift({key:c});const n=s[r];return"object"!=typeof n?n:new Proxy(n,this.handler(e,c))},set:(s,r,c)=>!!e.push({key:`${t}.${r}`,value:c})}}get proxy(){const e=[];return{state:new Proxy(this.state,this.handler(e)),tracer:e}}}const t=e=>{const s={};for(const r in e)"object"==typeof e[r]?s[r]=t(e[r]):s[r]=e[r];return s};export{e as Boutique,t as proxyToObject};
